#!/bin/bash

# Change to project root directory (where .ddev is located)
cd "$( dirname "${BASH_SOURCE[0]}" )/../../.."

# Create necessary directories
echo "Creating necessary directories..."
mkdir -p public_html/wp-content/{uploads,plugins/pressx-core}
chmod -R 777 public_html/wp-content/uploads

# Reset database
echo "Resetting database..."
ddev exec 'mysql -udb -pdb -e "DROP DATABASE IF EXISTS db; CREATE DATABASE db;"'

# Generate random admin password
ADMIN_PASSWORD=$(openssl rand -base64 12)

# Download WordPress core if not present
if [ ! -f public_html/wp-config.php ]; then
    echo "Downloading WordPress..."
    ddev exec -d /var/www/html/public_html wp core download

    echo "Creating wp-config.php..."
    ddev exec -d /var/www/html/public_html wp config create \
        --dbname=db \
        --dbuser=db \
        --dbpass=db \
        --dbhost=db \
        --extra-php <<'PHP'
define( 'PRESSX_FRONTEND_URL', 'http://localhost:3333' );
define( 'WORDPRESS_PREVIEW_SECRET', 'pressx_preview_secret' );
define( 'WP_ENVIRONMENT_TYPE', 'local' );
define( 'GRAPHQL_DEBUG', true );

// Include for ddev-managed settings in wp-config-ddev.php
$ddev_settings = dirname(__FILE__) . '/wp-config-ddev.php';
if (is_readable($ddev_settings) && !defined("DB_USER")) {
    require_once($ddev_settings);
}
PHP
fi

# Install dependencies with Composer
echo "Installing dependencies with Composer..."
ddev composer install

# Always install WordPress fresh
echo "Installing WordPress..."
ddev exec -d /var/www/html/public_html wp core install \
    --url='${DDEV_PRIMARY_URL}' \
    --title='PressX' \
    --admin_user=admin \
    --admin_password="${ADMIN_PASSWORD}" \
    --admin_email=admin@example.com

echo "WordPress installed successfully!"
echo -e "\n⚠️  SAVE THESE CREDENTIALS ⚠️"
echo "----------------------------------------"
echo "WordPress Admin: ${DDEV_PRIMARY_URL}/wp-admin"
echo "Username: admin"
echo "Password: ${ADMIN_PASSWORD}"
echo "----------------------------------------"

# Configure WordPress settings
echo "Configuring WordPress settings..."

# Activate required plugins
echo "Activating plugins..."
ddev exec -d /var/www/html/public_html wp plugin activate pressx-core classic-editor wp-graphql

# Configure Classic Editor settings
ddev exec -d /var/www/html/public_html wp option update classic-editor-replace replace
ddev exec -d /var/www/html/public_html wp option update classic-editor-allow-sites disallow

# Set up permalink structure
echo "Setting up permalink structure..."
ddev exec -d /var/www/html/public_html wp rewrite structure '/%postname%/'
ddev exec -d /var/www/html/public_html wp rewrite flush

# Create test landing page
echo "Creating test landing page..."
ddev create-landing

# Create test home page
echo "Creating test home page..."
ddev create-home

# Create test posts
echo "Creating test posts..."
ddev create-articles

# Create default menu
echo "Creating default menu..."
ddev create-menu

# Create footer menu
echo "Creating footer menu..."
ddev create-footer-menu

# Register menu location in WordPress
echo "Registering menu location..."
ddev exec -d /var/www/html/public_html "wp eval 'register_nav_menus([\"primary\" => \"Primary Navigation\"]);'"

# Verify setup
echo -e "\n----------------------------------------"
echo "🎉 Installation Complete! 🎉"
echo "----------------------------------------"
echo "WordPress Admin: ${DDEV_PRIMARY_URL}/wp-admin"
echo "Username: admin"
echo "Password: ${ADMIN_PASSWORD}"
echo "----------------------------------------"
echo "GraphQL endpoint: ${DDEV_PRIMARY_URL}/graphql"
echo "Next.js frontend: http://localhost:3333"
echo "----------------------------------------"
echo "Plugin Status:"
ddev exec -d /var/www/html/public_html wp plugin list

